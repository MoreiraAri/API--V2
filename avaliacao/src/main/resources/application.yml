# application.yml

# üöÄ Configura√ß√µes do Servidor Web
server:
  port: 8080 # Porta padr√£o para a sua API

# üóÑÔ∏è Configura√ß√µes do Banco de Dados H2
spring:
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE # Banco em mem√≥ria, n√£o fecha ap√≥s uso
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  h2:
    console:
      enabled: true        # Habilita o console do H2 para acesso via browser
      path: /h2-console    # URL para acessar o console do H2
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update     # Atualiza automaticamente o schema do banco (N√ÉO usar em produ√ß√£o)
    show-sql: true         # Exibe as queries SQL no console para debug
    properties:
      hibernate:
        format_sql: true   # Formata o SQL exibido para melhor legibilidade

  devtools:
    restart:
      enabled: true        # Reinicia automaticamente a aplica√ß√£o ao detectar mudan√ßas
    livereload:
      enabled: true        # Ativa LiveReload (necessita extens√£o no navegador)

# üîí Configura√ß√µes JWT para gera√ß√£o e valida√ß√£o de tokens
jwt:
  secret: umaChaveSecretaMuitoLongaEComplexaParaAssinarTokensJWT
  expiration: 3600000    # Expira√ß√£o do token em milissegundos (1 hora)

# üìö Configura√ß√£o do Springdoc OpenAPI para documenta√ß√£o Swagger
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true # Desabilita a URL default para evitar p√°gina Petstore
  api-docs:
    path: /v3/api-docs

# ‚ö†Ô∏è Seguran√ßa: Caso precise liberar frame options para H2 console (gerenciado via SecurityConfig)
# spring:
#   security:
#     headers:
#       frame-options: sameorigin

